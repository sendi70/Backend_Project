@model X.PagedList.IPagedList<ClientApi.Models.Event>
@using X.PagedList.Mvc.Core;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewData["Title"] = "Events";
}

<h1>Events</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@using (Html.BeginForm("Index","Event",FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString",ViewBag.CurrentFilter as string)  
        <input type="submit" value="Search" /></p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Name","Index",new {sortOrder=ViewBag.NameSortParm,currentFilter=ViewBag.CurrentFilter})
            </th>
            <th>
                @Html.ActionLink("Start Time","Index",new {sortOrder=ViewBag.DateSortParm,currentFilter=ViewBag.CurrentFilter})
            </th>
            <th>
                End Time
            </th>
            <th>
                Playground
            </th>
            <th>
                Participants
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndTime)
            </td>
            <td>
                <a asp-action="Details" asp-controller="Playground" asp-route-id=@item.Playground.Id>@Html.DisplayFor(modelItem => item.Playground.Name)</a>
            </td>
            <td>
                0/@item.Playground.Capacity
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", 
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
